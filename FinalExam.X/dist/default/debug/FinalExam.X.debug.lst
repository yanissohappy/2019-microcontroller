

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jan 06 21:09:40 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4520 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _TRISCbits	set	3988
    50  0000                     _TRISBbits	set	3987
    51  0000                     _TMR1	set	4046
    52  0000                     _PIR1bits	set	3998
    53  0000                     _IPR1bits	set	3999
    54  0000                     _PIE1bits	set	3997
    55  0000                     _T1CONbits	set	4045
    56  0000                     _TMR2	set	4044
    57  0000                     _CCPR1L	set	4030
    58  0000                     _CCP1CONbits	set	4029
    59  0000                     _RCONbits	set	4048
    60  0000                     _T2CON	set	4042
    61  0000                     _PR2	set	4043
    62  0000                     _OSCCONbits	set	4051
    63  0000                     _INTCON2bits	set	4081
    64  0000                     _INTCONbits	set	4082
    65                           
    66                           ; #config settings
    67  0000                     
    68                           	psect	cinit
    69  00015C                     __pcinit:
    70                           	opt callstack 0
    71  00015C                     start_initialization:
    72                           	opt callstack 0
    73  00015C                     __initialization:
    74                           	opt callstack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (4 bytes)
    77  00015C  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    78  00015E  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    79  000160  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    80  000162  6A01               	clrf	__pbssCOMRAM& (0+255),c
    81  000164                     end_of_initialization:
    82                           	opt callstack 0
    83  000164                     __end_of__initialization:
    84                           	opt callstack 0
    85  000164  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    86  000166  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    87  000168  0100               	movlb	0
    88  00016A  EF85  F000         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	bssCOMRAM
    91  000001                     __pbssCOMRAM:
    92                           	opt callstack 0
    93  000001                     _three_times:
    94                           	opt callstack 0
    95  000001                     	ds	2
    96  000003                     _start_count_down:
    97                           	opt callstack 0
    98  000003                     	ds	2
    99                           
   100                           	psect	cstackCOMRAM
   101  000005                     __pcstackCOMRAM:
   102                           	opt callstack 0
   103  000005                     ??_myIsr:
   104                           
   105                           ; 1 bytes @ 0x0
   106  000005                     	ds	2
   107  000007                     
   108                           ; 1 bytes @ 0x2
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 73 in file "Question3.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;		None
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   128 ;;      Params:         0       0       0       0       0       0       0
   129 ;;      Locals:         0       0       0       0       0       0       0
   130 ;;      Temps:          0       0       0       0       0       0       0
   131 ;;      Totals:         0       0       0       0       0       0       0
   132 ;;Total ram usage:        0 bytes
   133 ;; Hardware stack levels required when called:    1
   134 ;; This function calls:
   135 ;;		Nothing
   136 ;; This function is called by:
   137 ;;		Startup code after reset
   138 ;; This function uses a non-reentrant model
   139 ;;
   140                           
   141                           	psect	text0
   142  00010A                     __ptext0:
   143                           	opt callstack 0
   144  00010A                     _main:
   145                           	opt callstack 30
   146  00010A                     
   147                           ;Question3.c: 74:     TRISBbits.TRISB0 = 1;
   148  00010A  8093               	bsf	147,0,c	;volatile
   149                           
   150                           ;Question3.c: 75:     TRISCbits.TRISC2 = 0;
   151  00010C  9494               	bcf	148,2,c	;volatile
   152                           
   153                           ;Question3.c: 78:     OSCCONbits.IRCF2 = 0;
   154  00010E  9CD3               	bcf	211,6,c	;volatile
   155                           
   156                           ;Question3.c: 79:     OSCCONbits.IRCF1 = 1;
   157  000110  8AD3               	bsf	211,5,c	;volatile
   158                           
   159                           ;Question3.c: 80:     OSCCONbits.IRCF0 = 1;
   160  000112  88D3               	bsf	211,4,c	;volatile
   161  000114                     
   162                           ;Question3.c: 88:     PR2 = 155;
   163  000114  0E9B               	movlw	155
   164  000116  6ECB               	movwf	203,c	;volatile
   165                           
   166                           ;Question3.c: 91:     T2CON = 0x07;
   167  000118  0E07               	movlw	7
   168  00011A  6ECA               	movwf	202,c	;volatile
   169  00011C                     
   170                           ;Question3.c: 94:     RCONbits.IPEN = 1;
   171  00011C  8ED0               	bsf	208,7,c	;volatile
   172  00011E                     
   173                           ;Question3.c: 95:     INTCONbits.GIE = 1;
   174  00011E  8EF2               	bsf	242,7,c	;volatile
   175                           
   176                           ;Question3.c: 98:     CCP1CONbits.CCP1M = 0x0C;
   177  000120  50BD               	movf	189,w,c	;volatile
   178  000122  0BF0               	andlw	-16
   179  000124  090C               	iorlw	12
   180  000126  6EBD               	movwf	189,c	;volatile
   181                           
   182                           ;Question3.c: 100:     CCP1CONbits.DC1B = 0;
   183  000128  0ECF               	movlw	-49
   184  00012A  16BD               	andwf	189,f,c	;volatile
   185                           
   186                           ;Question3.c: 119:     CCPR1L = 5;
   187  00012C  0E05               	movlw	5
   188  00012E  6EBE               	movwf	190,c	;volatile
   189                           
   190                           ;Question3.c: 121:     TMR2 = 0;
   191  000130  0E00               	movlw	0
   192  000132  6ECC               	movwf	204,c	;volatile
   193  000134                     
   194                           ;Question3.c: 122:     INTCONbits.INT0IE = 1;
   195  000134  88F2               	bsf	242,4,c	;volatile
   196  000136                     
   197                           ;Question3.c: 123:     INTCON2bits.INTEDG0 = 0;
   198  000136  9CF1               	bcf	241,6,c	;volatile
   199  000138                     
   200                           ;Question3.c: 126:     T1CONbits.RD16 = 1;
   201  000138  8ECD               	bsf	205,7,c	;volatile
   202  00013A                     
   203                           ;Question3.c: 127:     T1CONbits.TMR1ON = 1;
   204  00013A  80CD               	bsf	205,0,c	;volatile
   205  00013C                     
   206                           ;Question3.c: 128:     T1CONbits.TMR1CS = 0;
   207  00013C  92CD               	bcf	205,1,c	;volatile
   208                           
   209                           ;Question3.c: 129:     T1CONbits.T1CKPS = 2;
   210  00013E  50CD               	movf	205,w,c	;volatile
   211  000140  0BCF               	andlw	-49
   212  000142  0920               	iorlw	32
   213  000144  6ECD               	movwf	205,c	;volatile
   214                           
   215                           ;Question3.c: 131:     TMR1 = 34285;
   216  000146  0E85               	movlw	133
   217  000148  6ECF               	movwf	207,c	;volatile
   218  00014A  0EED               	movlw	237
   219  00014C  6ECE               	movwf	206,c	;volatile
   220  00014E                     
   221                           ;Question3.c: 133:     PIE1bits.TMR1IE = 1;
   222  00014E  809D               	bsf	157,0,c	;volatile
   223  000150                     
   224                           ;Question3.c: 134:     IPR1bits.TMR1IP = 1;
   225  000150  809F               	bsf	159,0,c	;volatile
   226  000152                     
   227                           ;Question3.c: 135:     PIR1bits.TMR1IF = 0;
   228  000152  909E               	bcf	158,0,c	;volatile
   229  000154                     l43:
   230  000154  EFAA  F000         	goto	l43
   231  000158  EF07  F000         	goto	start
   232  00015C                     __end_of_main:
   233                           	opt callstack 0
   234                           
   235 ;; *************** function _myIsr *****************
   236 ;; Defined at:
   237 ;;		line 140 in file "Question3.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   251 ;;      Params:         0       0       0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0       0       0
   253 ;;      Temps:          2       0       0       0       0       0       0
   254 ;;      Totals:         2       0       0       0       0       0       0
   255 ;;Total ram usage:        2 bytes
   256 ;; Hardware stack levels used:    1
   257 ;; This function calls:
   258 ;;		Nothing
   259 ;; This function is called by:
   260 ;;		Interrupt level 2
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	intcode
   265  000008                     __pintcode:
   266                           	opt callstack 0
   267  000008                     _myIsr:
   268                           	opt callstack 30
   269                           
   270                           ;incstack = 0
   271  000008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   272  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   273                           
   274                           	psect	intcode_body
   275  000012                     __pintcode_body:
   276                           	opt callstack 30
   277  000012                     int_func:
   278                           	opt callstack 30
   279  000012  0006               	pop		; remove dummy address from shadow register refresh
   280  000014                     
   281                           ;Question3.c: 141:     if(INTCONbits.INT0IF){
   282  000014  A2F2               	btfss	242,1,c	;volatile
   283  000016  EF0F  F000         	goto	i2u1_41
   284  00001A  EF11  F000         	goto	i2u1_40
   285  00001E                     i2u1_41:
   286  00001E  EF60  F000         	goto	i2l785
   287  000022                     i2u1_40:
   288  000022                     
   289                           ;Question3.c: 142:         INTCONbits.INT0IF = 0;
   290  000022  92F2               	bcf	242,1,c	;volatile
   291                           
   292                           ;Question3.c: 143:         INTCONbits.INT0IE = 0;
   293  000024  98F2               	bcf	242,4,c	;volatile
   294  000026                     
   295                           ;Question3.c: 145:         start_count_down = 1;
   296  000026  0E00               	movlw	0
   297  000028  6E04               	movwf	(_start_count_down+1)^0,c
   298  00002A  0E01               	movlw	1
   299  00002C  6E03               	movwf	_start_count_down^0,c
   300                           
   301                           ;Question3.c: 146:         three_times = 0;
   302  00002E  0E00               	movlw	0
   303  000030  6E02               	movwf	(_three_times+1)^0,c
   304  000032  0E00               	movlw	0
   305  000034  6E01               	movwf	_three_times^0,c
   306                           
   307                           ;Question3.c: 149:         while(CCPR1L > 5){
   308  000036  EF53  F000         	goto	i2l781
   309  00003A                     i2l767:
   310                           
   311                           ;Question3.c: 152:                 CCP1CONbits.DC1B--;
   312  00003A  0E01               	movlw	1
   313  00003C  6E05               	movwf	??_myIsr^0,c
   314  00003E  38BD               	swapf	189,w,c	;volatile
   315  000040  0B03               	andlw	3
   316  000042  6E06               	movwf	(??_myIsr+1)^0,c
   317  000044  5005               	movf	??_myIsr^0,w,c
   318  000046  5E06               	subwf	(??_myIsr+1)^0,f,c
   319  000048  3A06               	swapf	(??_myIsr+1)^0,f,c
   320  00004A  50BD               	movf	189,w,c	;volatile
   321  00004C  1806               	xorwf	(??_myIsr+1)^0,w,c
   322  00004E  0BCF               	andlw	-49
   323  000050  1806               	xorwf	(??_myIsr+1)^0,w,c
   324  000052  6EBD               	movwf	189,c	;volatile
   325  000054                     i2l54:
   326                           
   327                           ;Question3.c: 151:             while(CCP1CONbits.DC1B > 0){
   328  000054  38BD               	swapf	189,w,c	;volatile
   329  000056  0B03               	andlw	3
   330  000058  0900               	iorlw	0
   331  00005A  A4D8               	btfss	status,2,c
   332  00005C  EF32  F000         	goto	i2u2_41
   333  000060  EF34  F000         	goto	i2u2_40
   334  000064                     i2u2_41:
   335  000064  EF1D  F000         	goto	i2l767
   336  000068                     i2u2_40:
   337  000068                     
   338                           ;Question3.c: 154:             if(CCPR1L == 5 && CCP1CONbits.DC1B == 0){
   339  000068  0E05               	movlw	5
   340  00006A  18BE               	xorwf	190,w,c	;volatile
   341  00006C  A4D8               	btfss	status,2,c
   342  00006E  EF3B  F000         	goto	i2u3_41
   343  000072  EF3D  F000         	goto	i2u3_40
   344  000076                     i2u3_41:
   345  000076  EF49  F000         	goto	i2l775
   346  00007A                     i2u3_40:
   347  00007A  38BD               	swapf	189,w,c	;volatile
   348  00007C  0B03               	andlw	3
   349  00007E  0900               	iorlw	0
   350  000080  A4D8               	btfss	status,2,c
   351  000082  EF45  F000         	goto	i2u4_41
   352  000086  EF47  F000         	goto	i2u4_40
   353  00008A                     i2u4_41:
   354  00008A  EF49  F000         	goto	i2l775
   355  00008E                     i2u4_40:
   356  00008E  EF5B  F000         	goto	i2l58
   357  000092                     i2l775:
   358                           
   359                           ;Question3.c: 157:             _delay(10000);
   360  000092  0E0D               	movlw	13
   361  000094  6E05               	movwf	??_myIsr^0,c
   362  000096  0EFC               	movlw	252
   363  000098                     i2u9_47:
   364  000098  2EE8               	decfsz	wreg,f,c
   365  00009A  D7FE               	bra	i2u9_47
   366  00009C  2E05               	decfsz	??_myIsr^0,f,c
   367  00009E  D7FC               	bra	i2u9_47
   368  0000A0                     
   369                           ;Question3.c: 158:             CCP1CONbits.DC1B = 3;
   370  0000A0  0E30               	movlw	48
   371  0000A2  12BD               	iorwf	189,f,c	;volatile
   372  0000A4                     
   373                           ;Question3.c: 159:             CCPR1L--;
   374  0000A4  06BE               	decf	190,f,c	;volatile
   375  0000A6                     i2l781:
   376                           
   377                           ;Question3.c: 149:         while(CCPR1L > 5){
   378  0000A6  0E06               	movlw	6
   379  0000A8  60BE               	cpfslt	190,c	;volatile
   380  0000AA  EF59  F000         	goto	i2u5_41
   381  0000AE  EF5B  F000         	goto	i2u5_40
   382  0000B2                     i2u5_41:
   383  0000B2  EF2A  F000         	goto	i2l54
   384  0000B6                     i2u5_40:
   385  0000B6                     i2l58:
   386                           
   387                           ;Question3.c: 162:         INTCONbits.INT0IE = 1;
   388  0000B6  88F2               	bsf	242,4,c	;volatile
   389  0000B8                     
   390                           ;Question3.c: 163:         _delay(100);
   391  0000B8  0E21               	movlw	33
   392  0000BA                     i2u10_47:
   393  0000BA  2EE8               	decfsz	wreg,f,c
   394  0000BC  D7FE               	bra	i2u10_47
   395  0000BE  F000               	nop	
   396  0000C0                     i2l785:
   397                           
   398                           ;Question3.c: 166:     if(start_count_down == 1 && PIR1bits.TMR1IF){
   399  0000C0  0403               	decf	_start_count_down^0,w,c
   400  0000C2  1004               	iorwf	(_start_count_down+1)^0,w,c
   401  0000C4  A4D8               	btfss	status,2,c
   402  0000C6  EF67  F000         	goto	i2u6_41
   403  0000CA  EF69  F000         	goto	i2u6_40
   404  0000CE                     i2u6_41:
   405  0000CE  EF83  F000         	goto	i2l61
   406  0000D2                     i2u6_40:
   407  0000D2  A09E               	btfss	158,0,c	;volatile
   408  0000D4  EF6E  F000         	goto	i2u7_41
   409  0000D8  EF70  F000         	goto	i2u7_40
   410  0000DC                     i2u7_41:
   411  0000DC  EF83  F000         	goto	i2l61
   412  0000E0                     i2u7_40:
   413  0000E0                     
   414                           ;Question3.c: 167:         PIR1bits.TMR1IF = 0;
   415  0000E0  909E               	bcf	158,0,c	;volatile
   416  0000E2                     
   417                           ;Question3.c: 168:         three_times++;
   418  0000E2  4A01               	infsnz	_three_times^0,f,c
   419  0000E4  2A02               	incf	(_three_times+1)^0,f,c
   420  0000E6                     
   421                           ;Question3.c: 169:         CCPR1L+=2;
   422  0000E6  0E02               	movlw	2
   423  0000E8  26BE               	addwf	190,f,c	;volatile
   424  0000EA                     
   425                           ;Question3.c: 170:         if(three_times == 4) start_count_down = 0;
   426  0000EA  0E04               	movlw	4
   427  0000EC  1801               	xorwf	_three_times^0,w,c
   428  0000EE  1002               	iorwf	(_three_times+1)^0,w,c
   429  0000F0  A4D8               	btfss	status,2,c
   430  0000F2  EF7D  F000         	goto	i2u8_41
   431  0000F6  EF7F  F000         	goto	i2u8_40
   432  0000FA                     i2u8_41:
   433  0000FA  EF83  F000         	goto	i2l61
   434  0000FE                     i2u8_40:
   435  0000FE  0E00               	movlw	0
   436  000100  6E04               	movwf	(_start_count_down+1)^0,c
   437  000102  0E00               	movlw	0
   438  000104  6E03               	movwf	_start_count_down^0,c
   439  000106                     i2l61:
   440  000106  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   441  000108  0011               	retfie		f
   442  00010A                     __end_of_myIsr:
   443                           	opt callstack 0
   444  0000                     
   445                           	psect	rparam
   446  0000                     
   447                           	psect	temp
   448  000007                     btemp:
   449                           	opt callstack 0
   450  000007                     	ds	1
   451  0000                     int$flags	set	btemp
   452  0000                     wtemp8	set	btemp+1
   453  0000                     ttemp5	set	btemp+1
   454  0000                     ttemp6	set	btemp+4
   455  0000                     ttemp7	set	btemp+8
   456                           tosu	equ	0xFFF
   457                           tosh	equ	0xFFE
   458                           tosl	equ	0xFFD
   459                           stkptr	equ	0xFFC
   460                           pclatu	equ	0xFFB
   461                           pclath	equ	0xFFA
   462                           pcl	equ	0xFF9
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           prodh	equ	0xFF4
   468                           prodl	equ	0xFF3
   469                           indf0	equ	0xFEF
   470                           postinc0	equ	0xFEE
   471                           postdec0	equ	0xFED
   472                           preinc0	equ	0xFEC
   473                           plusw0	equ	0xFEB
   474                           fsr0h	equ	0xFEA
   475                           fsr0l	equ	0xFE9
   476                           wreg	equ	0xFE8
   477                           indf1	equ	0xFE7
   478                           postinc1	equ	0xFE6
   479                           postdec1	equ	0xFE5
   480                           preinc1	equ	0xFE4
   481                           plusw1	equ	0xFE3
   482                           fsr1h	equ	0xFE2
   483                           fsr1l	equ	0xFE1
   484                           bsr	equ	0xFE0
   485                           indf2	equ	0xFDF
   486                           postinc2	equ	0xFDE
   487                           postdec2	equ	0xFDD
   488                           preinc2	equ	0xFDC
   489                           plusw2	equ	0xFDB
   490                           fsr2h	equ	0xFDA
   491                           fsr2l	equ	0xFD9
   492                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      2       6
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myIsr                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      2       6       1        4.8%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      14        0.0%
DATA                 0      0       6      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jan 06 21:09:40 2020

                     l43 0154                       l44 0154              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l741 011C                      l751 013A  
                    l743 011E                      l753 013C                      l745 0134  
                    l737 010A                      l755 014E                      l747 0136  
                    l739 0114                      l757 0150                      l749 0138  
                    l759 0152             __CFG_CPB$OFF 000000                      _PR2 000FCB  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     i2l61 0106                     i2l54 0054  
                   i2l58 00B6                     _TMR1 000FCE                     _TMR2 000FCC  
                   _main 010A                     btemp 0007                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0005                    _T2CON 000FCA                    i2l761 0014  
                  i2l771 007A                    i2l763 0022                    i2l781 00A6  
                  i2l765 0026                    i2l791 00E2                    i2l783 00B8  
                  i2l775 0092                    i2l767 003A                    i2l793 00E6  
                  i2l777 00A0                    i2l769 0068                    i2l785 00C0  
                  i2l795 00EA                    i2l787 00D2                    i2l779 00A4  
                  i2l797 00FE                    i2l789 00E0            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _myIsr 0008                    ttemp5 0008  
                  ttemp6 000B                    ttemp7 000F                    status 000FD8  
                  wtemp8 0008          __initialization 015C             __end_of_main 015C  
                 ??_main 0007            __activetblptr 000000                   ?_myIsr 0005  
                 _CCPR1L 000FBE                   i2u1_40 0022                   i2u1_41 001E  
                 i2u2_40 0068                   i2u2_41 0064                   i2u3_40 007A  
                 i2u3_41 0076                   i2u4_40 008E                   i2u4_41 008A  
                 i2u5_40 00B6                   i2u5_41 00B2                   i2u6_40 00D2  
                 i2u6_41 00CE                   i2u7_40 00E0                   i2u7_41 00DC  
                 i2u8_40 00FE                   i2u8_41 00FA                   i2u9_47 0098  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000               __accesstop 0080  
__end_of__initialization 0164          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0005            __end_of_myIsr 010A                  ??_myIsr 0005  
                i2u10_47 00BA                  __Hparam 0000                  __Lparam 0000  
                __pcinit 015C                  __ramtop 0600                  __ptext0 010A  
              _T1CONbits 000FCD           __pintcode_body 0012     end_of_initialization 0164  
                int_func 0012                _TRISBbits 000F93                _TRISCbits 000F94  
            _CCP1CONbits 000FBD      start_initialization 015C         __CFG_OSC$INTIO67 000000  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0001        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008           __size_of_myIsr 0102                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                 _PIR1bits 000F9E                 _RCONbits 000FD0  
       __CFG_WDTPS$32768 000000              _INTCON2bits 000FF1                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         _start_count_down 0003  
          __size_of_main 0052                 int$flags 0007               _INTCONbits 000FF2  
               intlevel2 0000               _OSCCONbits 000FD3              _three_times 0001  
