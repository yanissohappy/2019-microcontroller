

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Oct 20 22:12:44 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10  0000                     
    11                           ; Version 2.10
    12                           ; Generated 31/07/2019 GMT
    13                           ; 
    14                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC18F4520 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     
    46                           ; #config settings
    47                           
    48                           	psect	cinit
    49  007F60                     __pcinit:
    50                           	opt callstack 0
    51  007F60                     start_initialization:
    52                           	opt callstack 0
    53  007F60                     __initialization:
    54                           	opt callstack 0
    55  007F60                     end_of_initialization:
    56                           	opt callstack 0
    57  007F60                     __end_of__initialization:
    58                           	opt callstack 0
    59  007F60  0100               	movlb	0
    60  007F62  EFD6  F03F         	goto	_main	;jump to C main() function
    61                           
    62                           	psect	cstackCOMRAM
    63  000001                     __pcstackCOMRAM:
    64                           	opt callstack 0
    65  000001                     ?_divide:
    66  000001                     _divide$0:
    67                           	opt callstack 0
    68  000001                     main@res:
    69                           	opt callstack 0
    70                           
    71                           ; 2 bytes @ 0x0
    72  000001                     	ds	2
    73  000003                     main@quotient:
    74                           	opt callstack 0
    75  000003                     _divide$1:
    76                           	opt callstack 0
    77                           
    78                           ; 2 bytes @ 0x2
    79  000003                     	ds	1
    80  000004                     main@remainder:
    81                           	opt callstack 0
    82                           
    83                           ; 1 bytes @ 0x3
    84  000004                     	ds	1
    85                           
    86 ;;
    87 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    88 ;;
    89 ;; *************** function _main *****************
    90 ;; Defined at:
    91 ;;		line 13 in file "main.c"
    92 ;; Parameters:    Size  Location     Type
    93 ;;		None
    94 ;; Auto vars:     Size  Location     Type
    95 ;;  res             2    0[COMRAM] volatile unsigned int 
    96 ;;  remainder       1    3[COMRAM] volatile unsigned char 
    97 ;;  quotient        1    2[COMRAM] volatile unsigned char 
    98 ;; Return value:  Size  Location     Type
    99 ;;                  1    wreg      void 
   100 ;; Registers used:
   101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   102 ;; Tracked objects:
   103 ;;		On entry : 0/0
   104 ;;		On exit  : 0/0
   105 ;;		Unchanged: 0/0
   106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   107 ;;      Params:         0       0       0       0       0       0       0
   108 ;;      Locals:         4       0       0       0       0       0       0
   109 ;;      Temps:          0       0       0       0       0       0       0
   110 ;;      Totals:         4       0       0       0       0       0       0
   111 ;;Total ram usage:        4 bytes
   112 ;; Hardware stack levels required when called:    1
   113 ;; This function calls:
   114 ;;		_divide
   115 ;; This function is called by:
   116 ;;		Startup code after reset
   117 ;; This function uses a non-reentrant model
   118 ;;
   119                           
   120                           	psect	text0
   121  007FAC                     __ptext0:
   122                           	opt callstack 0
   123  007FAC                     _main:
   124                           	opt callstack 30
   125  007FAC                     
   126                           ;main.c: 14:     volatile unsigned int res = divide( 1, 30) ;
   127  007FAC  0E00               	movlw	0
   128  007FAE  6E02               	movwf	(_divide$0+1)^0,c
   129  007FB0  0E01               	movlw	1
   130  007FB2  6E01               	movwf	_divide$0^0,c
   131  007FB4  0E00               	movlw	0
   132  007FB6  6E04               	movwf	(_divide$1+1)^0,c
   133  007FB8  0E1E               	movlw	30
   134  007FBA  6E03               	movwf	_divide$1^0,c
   135  007FBC  ECB3  F03F         	call	_divide	;wreg free
   136  007FC0  C001  F001         	movff	?_divide,main@res	;volatile
   137  007FC4  C002  F002         	movff	?_divide+1,main@res+1	;volatile
   138                           
   139                           ;main.c: 15:     volatile unsigned char quotient = divide( 2, 1) ;
   140  007FC8  0E00               	movlw	0
   141  007FCA  6E02               	movwf	(_divide$0+1)^0,c
   142  007FCC  0E02               	movlw	2
   143  007FCE  6E01               	movwf	_divide$0^0,c
   144  007FD0  0E00               	movlw	0
   145  007FD2  6E04               	movwf	(_divide$1+1)^0,c
   146  007FD4  0E01               	movlw	1
   147  007FD6  6E03               	movwf	_divide$1^0,c
   148  007FD8  ECB3  F03F         	call	_divide	;wreg free
   149  007FDC  5001               	movf	?_divide^0,w,c
   150  007FDE  6E03               	movwf	main@quotient^0,c	;volatile
   151                           
   152                           ;main.c: 16:     volatile unsigned char remainder = divide( 2, 1) ;
   153  007FE0  0E00               	movlw	0
   154  007FE2  6E02               	movwf	(_divide$0+1)^0,c
   155  007FE4  0E02               	movlw	2
   156  007FE6  6E01               	movwf	_divide$0^0,c
   157  007FE8  0E00               	movlw	0
   158  007FEA  6E04               	movwf	(_divide$1+1)^0,c
   159  007FEC  0E01               	movlw	1
   160  007FEE  6E03               	movwf	_divide$1^0,c
   161  007FF0  ECB3  F03F         	call	_divide	;wreg free
   162  007FF4  5001               	movf	?_divide^0,w,c
   163  007FF6  6E04               	movwf	main@remainder^0,c	;volatile
   164  007FF8                     l7:
   165  007FF8  EFFC  F03F         	goto	l7
   166  007FFC  EF00  F000         	goto	start
   167  008000                     __end_of_main:
   168                           	opt callstack 0
   169  0000                     
   170                           	psect	rparam
   171  0000                     tosu	equ	0xFFF
   172                           tosh	equ	0xFFE
   173                           tosl	equ	0xFFD
   174                           stkptr	equ	0xFFC
   175                           pclatu	equ	0xFFB
   176                           pclath	equ	0xFFA
   177                           pcl	equ	0xFF9
   178                           tblptru	equ	0xFF8
   179                           tblptrh	equ	0xFF7
   180                           tblptrl	equ	0xFF6
   181                           tablat	equ	0xFF5
   182                           prodh	equ	0xFF4
   183                           prodl	equ	0xFF3
   184                           indf0	equ	0xFEF
   185                           postinc0	equ	0xFEE
   186                           postdec0	equ	0xFED
   187                           preinc0	equ	0xFEC
   188                           plusw0	equ	0xFEB
   189                           fsr0h	equ	0xFEA
   190                           fsr0l	equ	0xFE9
   191                           wreg	equ	0xFE8
   192                           indf1	equ	0xFE7
   193                           postinc1	equ	0xFE6
   194                           postdec1	equ	0xFE5
   195                           preinc1	equ	0xFE4
   196                           plusw1	equ	0xFE3
   197                           fsr1h	equ	0xFE2
   198                           fsr1l	equ	0xFE1
   199                           bsr	equ	0xFE0
   200                           indf2	equ	0xFDF
   201                           postinc2	equ	0xFDE
   202                           postdec2	equ	0xFDD
   203                           preinc2	equ	0xFDC
   204                           plusw2	equ	0xFDB
   205                           fsr2h	equ	0xFDA
   206                           fsr2l	equ	0xFD9
   207                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      4       4
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      75
                                              0 COMRAM     4     4      0
                             _divide
 ---------------------------------------------------------------------------------
 (1) _divide                                               4     0      4      72
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _divide

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      4       4       1        3.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Oct 20 22:12:44 2019

                      l7 7FF8                        l8 7FF8                      l688 7FAC  
                   _main 7FAC                     start 0000             ___param_bank 000000  
                  ?_main 0001             main@quotient 0003          __initialization 7F60  
           __end_of_main 8000                   ??_main 0001            __activetblptr 000000  
          main@remainder 0004                   _divide 7F66               __accesstop 0080  
__end_of__initialization 7F60            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?_divide 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F60                  __ramtop 0600                  __ptext0 7FAC  
                main@res 0001     end_of_initialization 7F60      start_initialization 7F60  
               ??_divide 0001                 __Hrparam 0000                 __Lrparam 0000  
               _divide$0 0001                 _divide$1 0003            __size_of_main 0054  
