

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jan 06 16:43:26 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4520 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TRISCbits	set	3988
    49  0000                     _TRISBbits	set	3987
    50  0000                     _TMR2	set	4044
    51  0000                     _CCPR1L	set	4030
    52  0000                     _CCP1CONbits	set	4029
    53  0000                     _RCONbits	set	4048
    54  0000                     _T2CON	set	4042
    55  0000                     _PR2	set	4043
    56  0000                     _OSCCONbits	set	4051
    57  0000                     _INTCON2bits	set	4081
    58  0000                     _INTCONbits	set	4082
    59                           
    60                           ; #config settings
    61  0000                     
    62                           	psect	cinit
    63  000152                     __pcinit:
    64                           	opt callstack 0
    65  000152                     start_initialization:
    66                           	opt callstack 0
    67  000152                     __initialization:
    68                           	opt callstack 0
    69  000152                     end_of_initialization:
    70                           	opt callstack 0
    71  000152                     __end_of__initialization:
    72                           	opt callstack 0
    73  000152  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    74  000154  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    75  000156  0100               	movlb	0
    76  000158  EF8E  F000         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt callstack 0
    81  000001                     ??_myIsr:
    82                           
    83                           ; 1 bytes @ 0x0
    84  000001                     	ds	2
    85  000003                     
    86                           ; 1 bytes @ 0x2
    87 ;;
    88 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    89 ;;
    90 ;; *************** function _main *****************
    91 ;; Defined at:
    92 ;;		line 71 in file "newmain.c"
    93 ;; Parameters:    Size  Location     Type
    94 ;;		None
    95 ;; Auto vars:     Size  Location     Type
    96 ;;		None
    97 ;; Return value:  Size  Location     Type
    98 ;;                  1    wreg      void 
    99 ;; Registers used:
   100 ;;		wreg, status,2
   101 ;; Tracked objects:
   102 ;;		On entry : 0/0
   103 ;;		On exit  : 0/0
   104 ;;		Unchanged: 0/0
   105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   106 ;;      Params:         0       0       0       0       0       0       0
   107 ;;      Locals:         0       0       0       0       0       0       0
   108 ;;      Temps:          0       0       0       0       0       0       0
   109 ;;      Totals:         0       0       0       0       0       0       0
   110 ;;Total ram usage:        0 bytes
   111 ;; Hardware stack levels required when called:    1
   112 ;; This function calls:
   113 ;;		Nothing
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           	psect	text0
   120  00011C                     __ptext0:
   121                           	opt callstack 0
   122  00011C                     _main:
   123                           	opt callstack 30
   124  00011C                     
   125                           ;newmain.c: 72:     TRISBbits.TRISB0 = 1;
   126  00011C  8093               	bsf	147,0,c	;volatile
   127                           
   128                           ;newmain.c: 73:     TRISCbits.TRISC2 = 0;
   129  00011E  9494               	bcf	148,2,c	;volatile
   130                           
   131                           ;newmain.c: 76:     OSCCONbits.IRCF2 = 0;
   132  000120  9CD3               	bcf	211,6,c	;volatile
   133                           
   134                           ;newmain.c: 77:     OSCCONbits.IRCF1 = 1;
   135  000122  8AD3               	bsf	211,5,c	;volatile
   136                           
   137                           ;newmain.c: 78:     OSCCONbits.IRCF0 = 1;
   138  000124  88D3               	bsf	211,4,c	;volatile
   139  000126                     
   140                           ;newmain.c: 86:     PR2 = 155;
   141  000126  0E9B               	movlw	155
   142  000128  6ECB               	movwf	203,c	;volatile
   143                           
   144                           ;newmain.c: 89:     T2CON = 0x07;
   145  00012A  0E07               	movlw	7
   146  00012C  6ECA               	movwf	202,c	;volatile
   147  00012E                     
   148                           ;newmain.c: 92:     RCONbits.IPEN = 1;
   149  00012E  8ED0               	bsf	208,7,c	;volatile
   150  000130                     
   151                           ;newmain.c: 93:     INTCONbits.GIE = 1;
   152  000130  8EF2               	bsf	242,7,c	;volatile
   153                           
   154                           ;newmain.c: 96:     CCP1CONbits.CCP1M = 0x0C;
   155  000132  50BD               	movf	189,w,c	;volatile
   156  000134  0BF0               	andlw	-16
   157  000136  090C               	iorlw	12
   158  000138  6EBD               	movwf	189,c	;volatile
   159                           
   160                           ;newmain.c: 98:     CCP1CONbits.DC1B = 0;
   161  00013A  0ECF               	movlw	-49
   162  00013C  16BD               	andwf	189,f,c	;volatile
   163                           
   164                           ;newmain.c: 117:     CCPR1L = 4;
   165  00013E  0E04               	movlw	4
   166  000140  6EBE               	movwf	190,c	;volatile
   167                           
   168                           ;newmain.c: 119:     TMR2 = 0;
   169  000142  0E00               	movlw	0
   170  000144  6ECC               	movwf	204,c	;volatile
   171  000146                     
   172                           ;newmain.c: 120:     INTCONbits.INT0IE = 1;
   173  000146  88F2               	bsf	242,4,c	;volatile
   174  000148                     
   175                           ;newmain.c: 121:     INTCON2bits.INTEDG0 = 0;
   176  000148  9CF1               	bcf	241,6,c	;volatile
   177  00014A                     l29:
   178  00014A  EFA5  F000         	goto	l29
   179  00014E  EF07  F000         	goto	start
   180  000152                     __end_of_main:
   181                           	opt callstack 0
   182                           
   183 ;; *************** function _myIsr *****************
   184 ;; Defined at:
   185 ;;		line 126 in file "newmain.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2, status,0
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   199 ;;      Params:         0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0
   201 ;;      Temps:          2       0       0       0       0       0       0
   202 ;;      Totals:         2       0       0       0       0       0       0
   203 ;;Total ram usage:        2 bytes
   204 ;; Hardware stack levels used:    1
   205 ;; This function calls:
   206 ;;		Nothing
   207 ;; This function is called by:
   208 ;;		Interrupt level 2
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	intcode
   213  000008                     __pintcode:
   214                           	opt callstack 0
   215  000008                     _myIsr:
   216                           	opt callstack 30
   217                           
   218                           ;incstack = 0
   219  000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   220  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   221                           
   222                           	psect	intcode_body
   223  000012                     __pintcode_body:
   224                           	opt callstack 30
   225  000012                     int_func:
   226                           	opt callstack 30
   227  000012  0006               	pop		; remove dummy address from shadow register refresh
   228  000014                     
   229                           ;newmain.c: 127:     if(INTCONbits.INT0IF){
   230  000014  A2F2               	btfss	242,1,c	;volatile
   231  000016  EF0F  F000         	goto	i2u1_41
   232  00001A  EF11  F000         	goto	i2u1_40
   233  00001E                     i2u1_41:
   234  00001E  EF8C  F000         	goto	i2l52
   235  000022                     i2u1_40:
   236  000022                     
   237                           ;newmain.c: 128:         INTCONbits.INT0IF = 0;
   238  000022  92F2               	bcf	242,1,c	;volatile
   239                           
   240                           ;newmain.c: 129:         INTCONbits.INT0IE = 0;
   241  000024  98F2               	bcf	242,4,c	;volatile
   242  000026  EF22  F000         	goto	i2l39
   243  00002A                     i2l744:
   244                           
   245                           ;newmain.c: 134:                 CCP1CONbits.DC1B++;
   246  00002A  0E01               	movlw	1
   247  00002C  6E01               	movwf	??_myIsr^0,c
   248  00002E  38BD               	swapf	189,w,c	;volatile
   249  000030  0B03               	andlw	3
   250  000032  6E02               	movwf	(??_myIsr+1)^0,c
   251  000034  5001               	movf	??_myIsr^0,w,c
   252  000036  2602               	addwf	(??_myIsr+1)^0,f,c
   253  000038  3A02               	swapf	(??_myIsr+1)^0,f,c
   254  00003A  50BD               	movf	189,w,c	;volatile
   255  00003C  1802               	xorwf	(??_myIsr+1)^0,w,c
   256  00003E  0BCF               	andlw	-49
   257  000040  1802               	xorwf	(??_myIsr+1)^0,w,c
   258  000042  6EBD               	movwf	189,c	;volatile
   259  000044                     i2l39:
   260                           
   261                           ;newmain.c: 133:             while(CCP1CONbits.DC1B < 3){
   262  000044  38BD               	swapf	189,w,c	;volatile
   263  000046  0B03               	andlw	3
   264  000048  0A03               	xorlw	3
   265  00004A  A4D8               	btfss	status,2,c
   266  00004C  EF2A  F000         	goto	i2u2_41
   267  000050  EF2C  F000         	goto	i2u2_40
   268  000054                     i2u2_41:
   269  000054  EF15  F000         	goto	i2l744
   270  000058                     i2u2_40:
   271  000058                     
   272                           ;newmain.c: 137:             if (CCPR1L == 18 && CCP1CONbits.DC1B == 3){
   273  000058  0E12               	movlw	18
   274  00005A  18BE               	xorwf	190,w,c	;volatile
   275  00005C  A4D8               	btfss	status,2,c
   276  00005E  EF33  F000         	goto	i2u3_41
   277  000062  EF35  F000         	goto	i2u3_40
   278  000066                     i2u3_41:
   279  000066  EF41  F000         	goto	i2l752
   280  00006A                     i2u3_40:
   281  00006A  38BD               	swapf	189,w,c	;volatile
   282  00006C  0B03               	andlw	3
   283  00006E  0A03               	xorlw	3
   284  000070  A4D8               	btfss	status,2,c
   285  000072  EF3D  F000         	goto	i2u4_41
   286  000076  EF3F  F000         	goto	i2u4_40
   287  00007A                     i2u4_41:
   288  00007A  EF41  F000         	goto	i2l752
   289  00007E                     i2u4_40:
   290  00007E  EF83  F000         	goto	i2l772
   291  000082                     i2l752:
   292                           
   293                           ;newmain.c: 141:             _delay(10000);
   294  000082  0E0D               	movlw	13
   295  000084  6E01               	movwf	??_myIsr^0,c
   296  000086  0EFC               	movlw	252
   297  000088                     i2u9_47:
   298  000088  2EE8               	decfsz	wreg,f,c
   299  00008A  D7FE               	bra	i2u9_47
   300  00008C  2E01               	decfsz	??_myIsr^0,f,c
   301  00008E  D7FC               	bra	i2u9_47
   302  000090                     
   303                           ;newmain.c: 142:             CCP1CONbits.DC1B = 0;
   304  000090  0ECF               	movlw	-49
   305  000092  16BD               	andwf	189,f,c	;volatile
   306  000094                     
   307                           ;newmain.c: 143:             CCPR1L++;
   308  000094  2ABE               	incf	190,f,c	;volatile
   309  000096  EF22  F000         	goto	i2l39
   310  00009A                     i2l758:
   311                           
   312                           ;newmain.c: 150:                 CCP1CONbits.DC1B--;
   313  00009A  0E01               	movlw	1
   314  00009C  6E01               	movwf	??_myIsr^0,c
   315  00009E  38BD               	swapf	189,w,c	;volatile
   316  0000A0  0B03               	andlw	3
   317  0000A2  6E02               	movwf	(??_myIsr+1)^0,c
   318  0000A4  5001               	movf	??_myIsr^0,w,c
   319  0000A6  5E02               	subwf	(??_myIsr+1)^0,f,c
   320  0000A8  3A02               	swapf	(??_myIsr+1)^0,f,c
   321  0000AA  50BD               	movf	189,w,c	;volatile
   322  0000AC  1802               	xorwf	(??_myIsr+1)^0,w,c
   323  0000AE  0BCF               	andlw	-49
   324  0000B0  1802               	xorwf	(??_myIsr+1)^0,w,c
   325  0000B2  6EBD               	movwf	189,c	;volatile
   326  0000B4                     i2l47:
   327                           
   328                           ;newmain.c: 149:             while(CCP1CONbits.DC1B > 0){
   329  0000B4  38BD               	swapf	189,w,c	;volatile
   330  0000B6  0B03               	andlw	3
   331  0000B8  0900               	iorlw	0
   332  0000BA  A4D8               	btfss	status,2,c
   333  0000BC  EF62  F000         	goto	i2u5_41
   334  0000C0  EF64  F000         	goto	i2u5_40
   335  0000C4                     i2u5_41:
   336  0000C4  EF4D  F000         	goto	i2l758
   337  0000C8                     i2u5_40:
   338  0000C8                     
   339                           ;newmain.c: 152:             if(CCPR1L == 4 && CCP1CONbits.DC1B == 0){
   340  0000C8  0E04               	movlw	4
   341  0000CA  18BE               	xorwf	190,w,c	;volatile
   342  0000CC  A4D8               	btfss	status,2,c
   343  0000CE  EF6B  F000         	goto	i2u6_41
   344  0000D2  EF6D  F000         	goto	i2u6_40
   345  0000D6                     i2u6_41:
   346  0000D6  EF79  F000         	goto	i2l766
   347  0000DA                     i2u6_40:
   348  0000DA  38BD               	swapf	189,w,c	;volatile
   349  0000DC  0B03               	andlw	3
   350  0000DE  0900               	iorlw	0
   351  0000E0  A4D8               	btfss	status,2,c
   352  0000E2  EF75  F000         	goto	i2u7_41
   353  0000E6  EF77  F000         	goto	i2u7_40
   354  0000EA                     i2u7_41:
   355  0000EA  EF79  F000         	goto	i2l766
   356  0000EE                     i2u7_40:
   357  0000EE  EF8B  F000         	goto	i2l51
   358  0000F2                     i2l766:
   359                           
   360                           ;newmain.c: 155:             _delay(10000);
   361  0000F2  0E0D               	movlw	13
   362  0000F4  6E01               	movwf	??_myIsr^0,c
   363  0000F6  0EFC               	movlw	252
   364  0000F8                     i2u10_47:
   365  0000F8  2EE8               	decfsz	wreg,f,c
   366  0000FA  D7FE               	bra	i2u10_47
   367  0000FC  2E01               	decfsz	??_myIsr^0,f,c
   368  0000FE  D7FC               	bra	i2u10_47
   369  000100                     
   370                           ;newmain.c: 156:             CCP1CONbits.DC1B = 3;
   371  000100  0E30               	movlw	48
   372  000102  12BD               	iorwf	189,f,c	;volatile
   373  000104                     
   374                           ;newmain.c: 157:             CCPR1L--;
   375  000104  06BE               	decf	190,f,c	;volatile
   376  000106                     i2l772:
   377                           
   378                           ;newmain.c: 147:         while(CCPR1L >= 4){
   379  000106  0E04               	movlw	4
   380  000108  60BE               	cpfslt	190,c	;volatile
   381  00010A  EF89  F000         	goto	i2u8_41
   382  00010E  EF8B  F000         	goto	i2u8_40
   383  000112                     i2u8_41:
   384  000112  EF5A  F000         	goto	i2l47
   385  000116                     i2u8_40:
   386  000116                     i2l51:
   387                           
   388                           ;newmain.c: 159:         INTCONbits.INT0IE = 1;
   389  000116  88F2               	bsf	242,4,c	;volatile
   390  000118                     i2l52:
   391  000118  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   392  00011A  0011               	retfie		f
   393  00011C                     __end_of_myIsr:
   394                           	opt callstack 0
   395  0000                     
   396                           	psect	rparam
   397  0000                     
   398                           	psect	temp
   399  000003                     btemp:
   400                           	opt callstack 0
   401  000003                     	ds	1
   402  0000                     int$flags	set	btemp
   403  0000                     wtemp8	set	btemp+1
   404  0000                     ttemp5	set	btemp+1
   405  0000                     ttemp6	set	btemp+4
   406  0000                     ttemp7	set	btemp+8
   407                           tosu	equ	0xFFF
   408                           tosh	equ	0xFFE
   409                           tosl	equ	0xFFD
   410                           stkptr	equ	0xFFC
   411                           pclatu	equ	0xFFB
   412                           pclath	equ	0xFFA
   413                           pcl	equ	0xFF9
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           prodh	equ	0xFF4
   419                           prodl	equ	0xFF3
   420                           indf0	equ	0xFEF
   421                           postinc0	equ	0xFEE
   422                           postdec0	equ	0xFED
   423                           preinc0	equ	0xFEC
   424                           plusw0	equ	0xFEB
   425                           fsr0h	equ	0xFEA
   426                           fsr0l	equ	0xFE9
   427                           wreg	equ	0xFE8
   428                           indf1	equ	0xFE7
   429                           postinc1	equ	0xFE6
   430                           postdec1	equ	0xFE5
   431                           preinc1	equ	0xFE4
   432                           plusw1	equ	0xFE3
   433                           fsr1h	equ	0xFE2
   434                           fsr1l	equ	0xFE1
   435                           bsr	equ	0xFE0
   436                           indf2	equ	0xFDF
   437                           postinc2	equ	0xFDE
   438                           postdec2	equ	0xFDD
   439                           preinc2	equ	0xFDC
   440                           plusw2	equ	0xFDB
   441                           fsr2h	equ	0xFDA
   442                           fsr2l	equ	0xFD9
   443                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      2       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myIsr                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      2       2       1        1.6%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BANK5               F4      0       0      13        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            F4      0       0      15        0.0%
BIGRAM             5F3      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jan 06 16:43:26 2020

                     l30 014A                       l29 014A              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l730 0126                      l732 012E  
                    l734 0130                      l736 0146                      l728 011C  
                    l738 0148             __CFG_CPB$OFF 000000                      _PR2 000FCB  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     i2l51 0116                     i2l52 0118  
                   i2l47 00B4                     i2l39 0044                     _TMR2 000FCC  
                   _main 011C                     btemp 0003                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    _T2CON 000FCA                    i2l740 0014  
                  i2l742 0022                    i2l760 00C8                    i2l752 0082  
                  i2l744 002A                    i2l770 0104                    i2l762 00DA  
                  i2l754 0090                    i2l746 0058                    i2l756 0094  
                  i2l772 0106                    i2l748 006A                    i2l766 00F2  
                  i2l758 009A                    i2l768 0100            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _myIsr 0008                    ttemp5 0004  
                  ttemp6 0007                    ttemp7 000B                    status 000FD8  
                  wtemp8 0004          __initialization 0152             __end_of_main 0152  
                 ??_main 0003            __activetblptr 000000                   ?_myIsr 0001  
                 _CCPR1L 000FBE                   i2u1_40 0022                   i2u1_41 001E  
                 i2u2_40 0058                   i2u2_41 0054                   i2u3_40 006A  
                 i2u3_41 0066                   i2u4_40 007E                   i2u4_41 007A  
                 i2u5_40 00C8                   i2u5_41 00C4                   i2u6_40 00DA  
                 i2u6_41 00D6                   i2u7_40 00EE                   i2u7_41 00EA  
                 i2u8_40 0116                   i2u8_41 0112                   i2u9_47 0088  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000               __accesstop 0080  
__end_of__initialization 0152          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_myIsr 011C                  ??_myIsr 0001  
                i2u10_47 00F8                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0152                  __ramtop 0600                  __ptext0 011C  
         __pintcode_body 0012     end_of_initialization 0152                  int_func 0012  
              _TRISBbits 000F93                _TRISCbits 000F94              _CCP1CONbits 000FBD  
    start_initialization 0152         __CFG_OSC$INTIO67 000000         __CFG_LPT1OSC$OFF 000000  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008           __size_of_myIsr 0114  
               _RCONbits 000FD0         __CFG_WDTPS$32768 000000              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
          __size_of_main 0036                 int$flags 0003               _INTCONbits 000FF2  
               intlevel2 0000               _OSCCONbits 000FD3  
